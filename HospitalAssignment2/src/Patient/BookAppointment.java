/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Patient;

import ApplicationDesign.LogIn;
import Classes.Booking;
import Classes.BookingArray;
import Classes.CommunityArray;
import Classes.EncounterArray;
import Classes.Hospital;
import Classes.HospitalArray;
import Classes.Person;
import Classes.PersonArray;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vishwashah
 */
public class BookAppointment extends javax.swing.JPanel {

    /**
     * Creates new form BookAppointment
     */
    PersonArray person;
    HospitalArray hospital;
    CommunityArray community;
    BookingArray booking;
    EncounterArray encounter;
    
    public BookAppointment(PersonArray person, HospitalArray hospital, CommunityArray community, BookingArray booking, EncounterArray encounter) {
        initComponents();
        
        this.person = person;
        this.hospital = hospital;
        this.community = community;
        this.booking = booking;
        this.encounter = encounter;
        
        addCommuniy();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        HosTableScroll = new javax.swing.JScrollPane();
        HosTable = new javax.swing.JTable();
        Desciption1 = new javax.swing.JLabel();
        Desciption2 = new javax.swing.JLabel();
        SeleHosButton = new javax.swing.JButton();
        SelectedHos = new javax.swing.JTextField();
        DocTableScroll = new javax.swing.JScrollPane();
        DocTable = new javax.swing.JTable();
        Desciption3 = new javax.swing.JLabel();
        Desciption4 = new javax.swing.JLabel();
        SeleDocButton = new javax.swing.JButton();
        SelectedDoc = new javax.swing.JTextField();
        BookAppoButton = new javax.swing.JButton();
        Desciption5 = new javax.swing.JLabel();
        Desciption6 = new javax.swing.JLabel();
        CommunityInput = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        HosTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        HosTable.setForeground(new java.awt.Color(51, 51, 51));
        HosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital", "Community", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        HosTableScroll.setViewportView(HosTable);

        Desciption1.setFont(new java.awt.Font("Symbol", 0, 24)); // NOI18N
        Desciption1.setForeground(new java.awt.Color(0, 102, 102));
        Desciption1.setText("Hospitals In The Neighbourhood");

        Desciption2.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        Desciption2.setForeground(new java.awt.Color(0, 102, 102));
        Desciption2.setText("Select Hospital");

        SeleHosButton.setBackground(new java.awt.Color(0, 102, 102));
        SeleHosButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        SeleHosButton.setForeground(new java.awt.Color(255, 255, 255));
        SeleHosButton.setText("SELECT HOSPITAL");
        SeleHosButton.setMaximumSize(new java.awt.Dimension(120, 50));
        SeleHosButton.setMinimumSize(new java.awt.Dimension(120, 50));
        SeleHosButton.setPreferredSize(new java.awt.Dimension(200, 60));
        SeleHosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleHosButtonActionPerformed(evt);
            }
        });

        SelectedHos.setBackground(new java.awt.Color(238, 238, 238));
        SelectedHos.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        SelectedHos.setForeground(new java.awt.Color(51, 51, 51));
        SelectedHos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectedHosActionPerformed(evt);
            }
        });

        DocTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        DocTable.setForeground(new java.awt.Color(51, 51, 51));
        DocTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Doctor", "Community", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DocTableScroll.setViewportView(DocTable);

        Desciption3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Desciption3.setForeground(new java.awt.Color(0, 102, 102));
        Desciption3.setText("Doctors Near You");

        Desciption4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Desciption4.setForeground(new java.awt.Color(0, 102, 102));
        Desciption4.setText("Select Hospital to complete appointment:");

        SeleDocButton.setBackground(new java.awt.Color(0, 102, 102));
        SeleDocButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        SeleDocButton.setForeground(new java.awt.Color(255, 255, 255));
        SeleDocButton.setText("SELECT DOCTOR");
        SeleDocButton.setMaximumSize(new java.awt.Dimension(120, 50));
        SeleDocButton.setMinimumSize(new java.awt.Dimension(120, 50));
        SeleDocButton.setPreferredSize(new java.awt.Dimension(200, 60));
        SeleDocButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleDocButtonActionPerformed(evt);
            }
        });

        SelectedDoc.setBackground(new java.awt.Color(238, 238, 238));
        SelectedDoc.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        SelectedDoc.setForeground(new java.awt.Color(51, 51, 51));
        SelectedDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectedDocActionPerformed(evt);
            }
        });

        BookAppoButton.setBackground(new java.awt.Color(0, 102, 102));
        BookAppoButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        BookAppoButton.setForeground(new java.awt.Color(255, 255, 255));
        BookAppoButton.setText("BOOK APPOINtMENT");
        BookAppoButton.setMaximumSize(new java.awt.Dimension(120, 50));
        BookAppoButton.setMinimumSize(new java.awt.Dimension(120, 50));
        BookAppoButton.setPreferredSize(new java.awt.Dimension(200, 60));
        BookAppoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookAppoButtonActionPerformed(evt);
            }
        });

        Desciption5.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        Desciption5.setForeground(new java.awt.Color(0, 102, 102));
        Desciption5.setText("Selected Hospital is");

        Desciption6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Desciption6.setForeground(new java.awt.Color(0, 102, 102));
        Desciption6.setText("Selected Doctor is");

        CommunityInput.setBackground(new java.awt.Color(238, 238, 238));
        CommunityInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        CommunityInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Community" }));
        CommunityInput.setPreferredSize(new java.awt.Dimension(64, 23));
        CommunityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CommunityInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(SeleHosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(SelectedHos)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(Desciption5)
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Desciption1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(HosTableScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addComponent(DocTableScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addComponent(Desciption3)
                        .addComponent(Desciption4)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(SeleDocButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(SelectedDoc)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(Desciption6)
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addComponent(BookAppoButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Desciption2))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Desciption1)
                    .addComponent(CommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(HosTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(Desciption2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SeleHosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Desciption5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SelectedHos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addComponent(Desciption3)
                .addGap(20, 20, 20)
                .addComponent(DocTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Desciption4)
                .addGap(18, 18, 18)
                .addComponent(Desciption6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectedDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SeleDocButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(BookAppoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 595, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 799, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SeleHosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleHosButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = HosTable.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showInputDialog(this,"Please select a row to view");
            return;
        }

        DefaultTableModel Model = (DefaultTableModel)HosTable.getModel();
        Hospital h = (Hospital) Model.getValueAt(selectedRowIndex,0);

        SelectedHos.setText(h.getHospitalName());
    }//GEN-LAST:event_SeleHosButtonActionPerformed

    private void SelectedHosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectedHosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SelectedHosActionPerformed

    private void SeleDocButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleDocButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = DocTable.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showInputDialog(this,"Please select a row to view");
            return;
        }

        DefaultTableModel Model = (DefaultTableModel)DocTable.getModel();
        SelectedDoc.setText((String) Model.getValueAt(selectedRowIndex,0));
    }//GEN-LAST:event_SeleDocButtonActionPerformed

    private void SelectedDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectedDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SelectedDocActionPerformed

    private void BookAppoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookAppoButtonActionPerformed
        // TODO add your handling code here:
        Booking b = booking.addNewBooking();

        for(Hospital h:hospital.getHospital()) {
            String temp = h.getHospitalName();
            if(temp.equals(SelectedHos.getText())) {
                b.setHosID(h.getHosID());
            }
        }

        for(Person p:person.getPerson()) {
            String temp = p.getPersonName();
            if(temp.equals(SelectedDoc.getText())) {
                b.setHosID(p.getPersonID());
            }
        }
    }//GEN-LAST:event_BookAppoButtonActionPerformed

    private void CommunityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CommunityInputActionPerformed
        // TODO add your handling code here:
        HosTable();
        DocTable();
    }//GEN-LAST:event_CommunityInputActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BookAppoButton;
    private javax.swing.JComboBox<String> CommunityInput;
    private javax.swing.JLabel Desciption1;
    private javax.swing.JLabel Desciption2;
    private javax.swing.JLabel Desciption3;
    private javax.swing.JLabel Desciption4;
    private javax.swing.JLabel Desciption5;
    private javax.swing.JLabel Desciption6;
    private javax.swing.JTable DocTable;
    private javax.swing.JScrollPane DocTableScroll;
    private javax.swing.JTable HosTable;
    private javax.swing.JScrollPane HosTableScroll;
    private javax.swing.JButton SeleDocButton;
    private javax.swing.JButton SeleHosButton;
    private javax.swing.JTextField SelectedDoc;
    private javax.swing.JTextField SelectedHos;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
   private void HosTable() {
        
        DefaultTableModel Model = (DefaultTableModel)HosTable.getModel();
        Model.setRowCount(0);
        
        String tempUser = LogIn.Instance.tmpLogInUsernameInput.getText();
        String community = (String) CommunityInput.getSelectedItem();
//        for(Person p:person.getPerson()) {
//            String temp = p.getPersonEmail();
//            if(temp.equals(tempUser)) {
//                community = p.getCommunity();
//            }
//        }
        
        for(Hospital h:hospital.getHospital()) {
            Object[] row = new Object[3];
            System.out.println(h.getHospitalCommunity());
            String temp = h.getHospitalCommunity();
            if(temp.equals(community)) {
                row[0] = h;
                row[1] = h.getHospitalCommunity();
                row[2] = h.getHospitalCity();
                Model.addRow(row);
            }
        }
    }
    
    private void DocTable() {
        
        DefaultTableModel Model = (DefaultTableModel)DocTable.getModel();
        Model.setRowCount(0);
        
        String tempUser = LogIn.Instance.tmpLogInUsernameInput.getText();     
        String community = (String) CommunityInput.getSelectedItem();
        
        for(Person p:person.getPerson()) {
            Object[] row = new Object[3];
            String comCheck = p.getCommunity();
            String typeCheck = p.getPersonType();
            if(comCheck.equals(community) && typeCheck.equals("Doctor")) {
                row[0] = p.getPersonName();
                row[1] = p.getCommunity();
                row[2] = p.getCity();
                Model.addRow(row);
            }
        }
    }
    
    private void addCommuniy() {
        String filePath = "/Users/vishwashah/Downloads/Assignment2/files/Community.csv";
       
        try (Scanner sc = new Scanner(new File(filePath))) {
            sc.useDelimiter("[,\n]");
            String[] temp = new String[3];
            while (sc.hasNext()) {
                for(int i = 0; i < temp.length; i++) {
                    temp[i] = sc.next();
                }
                CommunityInput.addItem(temp[0]);
            }
        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
}
