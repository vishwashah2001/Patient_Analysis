/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package SystemAdmin;
import Classes.BookingArray;
import Classes.Community;
import Classes.CommunityArray;
import Classes.EncounterArray;
import Classes.HospitalArray;
import Classes.Person;
import Classes.PersonArray;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author vishwashah
 */
public class DoctorDirectory extends javax.swing.JPanel {

    /**
     * Creates new form DoctorDirectory
     */
   PersonArray person;
    HospitalArray hospital;
    CommunityArray community;
    BookingArray booking;
    EncounterArray encounter;
    
    public DoctorDirectory(PersonArray person, HospitalArray hospital, CommunityArray community, BookingArray booking, EncounterArray encounter) {
        initComponents();
        
        this.person = person;
        this.hospital = hospital;
        this.community = community;
        this.booking = booking;
        this.encounter = encounter;
        
        addCommuniy();
        ArrangeTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TableScroll = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        TypeLbl = new javax.swing.JLabel();
        TypeInput = new javax.swing.JComboBox<>();
        NameInput = new javax.swing.JTextField();
        NameLbl = new javax.swing.JLabel();
        IdLbl = new javax.swing.JLabel();
        IdInput = new javax.swing.JTextField();
        AgeInput = new javax.swing.JSpinner();
        GenderLbl = new javax.swing.JLabel();
        ContactLbl = new javax.swing.JLabel();
        ContactInput = new javax.swing.JTextField();
        EmailLbl = new javax.swing.JLabel();
        EmailInput = new javax.swing.JTextField();
        CommunityLbl = new javax.swing.JLabel();
        CommunityInput = new javax.swing.JComboBox<>();
        CityLbl = new javax.swing.JLabel();
        CityInput = new javax.swing.JTextField();
        HouseNoLbl = new javax.swing.JLabel();
        HouseNoInput = new javax.swing.JTextField();
        StreetLbl = new javax.swing.JLabel();
        StreetInput = new javax.swing.JTextField();
        Agelbl = new javax.swing.JLabel();
        ViewButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        SearchInput = new javax.swing.JTextField();
        GenderInput = new javax.swing.JTextField();
        ContactErrMsg = new javax.swing.JLabel();
        EmailErrMsg = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Table.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        Table.setForeground(new java.awt.Color(51, 51, 51));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Type", "ID", "Name", "Contact", "Email", "Community"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableScroll.setViewportView(Table);

        TypeLbl.setBackground(new java.awt.Color(255, 255, 255));
        TypeLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        TypeLbl.setText("Type:");
        TypeLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        TypeInput.setBackground(new java.awt.Color(238, 238, 238));
        TypeInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        TypeInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Person", "Patient", "Doctor", "Community Admin", "Hospital Admin" }));
        TypeInput.setPreferredSize(new java.awt.Dimension(64, 23));
        TypeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeInputActionPerformed(evt);
            }
        });

        NameInput.setBackground(new java.awt.Color(238, 238, 238));
        NameInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        NameInput.setForeground(new java.awt.Color(51, 51, 51));
        NameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameInputActionPerformed(evt);
            }
        });

        NameLbl.setBackground(new java.awt.Color(255, 255, 255));
        NameLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        NameLbl.setText("Name:");
        NameLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        IdLbl.setBackground(new java.awt.Color(255, 255, 255));
        IdLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        IdLbl.setText("ID:");
        IdLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        IdInput.setBackground(new java.awt.Color(238, 238, 238));
        IdInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        IdInput.setForeground(new java.awt.Color(51, 51, 51));
        IdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdInputActionPerformed(evt);
            }
        });

        AgeInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        AgeInput.setModel(new javax.swing.SpinnerNumberModel(22, 18, 62, 1));

        GenderLbl.setBackground(new java.awt.Color(255, 255, 255));
        GenderLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        GenderLbl.setText("Gender:");
        GenderLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        ContactLbl.setBackground(new java.awt.Color(255, 255, 255));
        ContactLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        ContactLbl.setText("Contact:");
        ContactLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        ContactInput.setBackground(new java.awt.Color(238, 238, 238));
        ContactInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        ContactInput.setForeground(new java.awt.Color(51, 51, 51));
        ContactInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContactInputActionPerformed(evt);
            }
        });

        EmailLbl.setBackground(new java.awt.Color(255, 255, 255));
        EmailLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        EmailLbl.setText("Email:");
        EmailLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        EmailInput.setBackground(new java.awt.Color(238, 238, 238));
        EmailInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        EmailInput.setForeground(new java.awt.Color(51, 51, 51));
        EmailInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailInputActionPerformed(evt);
            }
        });

        CommunityLbl.setBackground(new java.awt.Color(255, 255, 255));
        CommunityLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        CommunityLbl.setText("Community:");
        CommunityLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        CommunityInput.setBackground(new java.awt.Color(238, 238, 238));
        CommunityInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        CommunityInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Community" }));
        CommunityInput.setPreferredSize(new java.awt.Dimension(64, 23));
        CommunityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CommunityInputActionPerformed(evt);
            }
        });

        CityLbl.setBackground(new java.awt.Color(255, 255, 255));
        CityLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        CityLbl.setText("City:");
        CityLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        CityInput.setBackground(new java.awt.Color(238, 238, 238));
        CityInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        CityInput.setForeground(new java.awt.Color(51, 51, 51));
        CityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityInputActionPerformed(evt);
            }
        });

        HouseNoLbl.setBackground(new java.awt.Color(255, 255, 255));
        HouseNoLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        HouseNoLbl.setText("House No:");
        HouseNoLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        HouseNoInput.setBackground(new java.awt.Color(238, 238, 238));
        HouseNoInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        HouseNoInput.setForeground(new java.awt.Color(51, 51, 51));
        HouseNoInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HouseNoInputActionPerformed(evt);
            }
        });

        StreetLbl.setBackground(new java.awt.Color(255, 255, 255));
        StreetLbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        StreetLbl.setText("Street:");
        StreetLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        StreetInput.setBackground(new java.awt.Color(238, 238, 238));
        StreetInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        StreetInput.setForeground(new java.awt.Color(51, 51, 51));
        StreetInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StreetInputActionPerformed(evt);
            }
        });

        Agelbl.setBackground(new java.awt.Color(255, 255, 255));
        Agelbl.setFont(new java.awt.Font("Symbol", 0, 14)); // NOI18N
        Agelbl.setText("Age:");
        Agelbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        ViewButton.setBackground(new java.awt.Color(0, 153, 153));
        ViewButton.setFont(new java.awt.Font("Symbol", 1, 13)); // NOI18N
        ViewButton.setForeground(new java.awt.Color(255, 255, 255));
        ViewButton.setText("VIEW");
        ViewButton.setMaximumSize(new java.awt.Dimension(120, 50));
        ViewButton.setMinimumSize(new java.awt.Dimension(120, 50));
        ViewButton.setPreferredSize(new java.awt.Dimension(200, 60));
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });

        UpdateButton.setBackground(new java.awt.Color(0, 153, 153));
        UpdateButton.setFont(new java.awt.Font("Symbol", 1, 13)); // NOI18N
        UpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        UpdateButton.setText("UPDATE");
        UpdateButton.setMaximumSize(new java.awt.Dimension(120, 50));
        UpdateButton.setMinimumSize(new java.awt.Dimension(120, 50));
        UpdateButton.setPreferredSize(new java.awt.Dimension(200, 60));
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        DeleteButton.setBackground(new java.awt.Color(0, 153, 153));
        DeleteButton.setFont(new java.awt.Font("Symbol", 1, 13)); // NOI18N
        DeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        DeleteButton.setText("DELETE");
        DeleteButton.setMaximumSize(new java.awt.Dimension(120, 50));
        DeleteButton.setMinimumSize(new java.awt.Dimension(120, 50));
        DeleteButton.setPreferredSize(new java.awt.Dimension(200, 60));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        SearchButton.setBackground(new java.awt.Color(0, 153, 153));
        SearchButton.setFont(new java.awt.Font("Symbol", 1, 13)); // NOI18N
        SearchButton.setForeground(new java.awt.Color(255, 255, 255));
        SearchButton.setText("SEARCH");
        SearchButton.setMaximumSize(new java.awt.Dimension(120, 50));
        SearchButton.setMinimumSize(new java.awt.Dimension(120, 50));
        SearchButton.setPreferredSize(new java.awt.Dimension(200, 60));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        SearchInput.setBackground(new java.awt.Color(238, 238, 238));
        SearchInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        SearchInput.setForeground(new java.awt.Color(51, 51, 51));
        SearchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchInputActionPerformed(evt);
            }
        });
        SearchInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchInputKeyReleased(evt);
            }
        });

        GenderInput.setBackground(new java.awt.Color(238, 238, 238));
        GenderInput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        GenderInput.setForeground(new java.awt.Color(51, 51, 51));
        GenderInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderInputActionPerformed(evt);
            }
        });

        ContactErrMsg.setBackground(new java.awt.Color(255, 255, 255));
        ContactErrMsg.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        ContactErrMsg.setForeground(new java.awt.Color(255, 51, 51));
        ContactErrMsg.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        ContactErrMsg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ContactErrMsgKeyReleased(evt);
            }
        });

        EmailErrMsg.setBackground(new java.awt.Color(255, 255, 255));
        EmailErrMsg.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        EmailErrMsg.setForeground(new java.awt.Color(255, 51, 51));
        EmailErrMsg.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        EmailErrMsg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EmailErrMsgKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameLbl)
                            .addComponent(TypeLbl)
                            .addComponent(IdLbl)
                            .addComponent(GenderLbl)
                            .addComponent(ContactLbl)
                            .addComponent(CommunityLbl)
                            .addComponent(HouseNoLbl)
                            .addComponent(EmailLbl))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(IdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(Agelbl)
                                .addGap(10, 10, 10)
                                .addComponent(AgeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(GenderInput)
                            .addComponent(ContactInput)
                            .addComponent(EmailInput)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(HouseNoInput)
                                .addGap(20, 20, 20)
                                .addComponent(StreetLbl)
                                .addGap(10, 10, 10)
                                .addComponent(StreetInput, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(CommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(CityLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(NameInput))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ContactErrMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EmailErrMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(SearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(9, 9, 9))
                                .addComponent(TableScroll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(ViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(TableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypeLbl)
                    .addComponent(TypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLbl)
                    .addComponent(NameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IdLbl)
                    .addComponent(IdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Agelbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenderLbl)
                    .addComponent(GenderInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(ContactLbl))
                            .addComponent(ContactInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailLbl)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ContactErrMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EmailErrMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CommunityLbl)
                    .addComponent(CommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityLbl)
                    .addComponent(CityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HouseNoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HouseNoLbl)
                    .addComponent(StreetLbl)
                    .addComponent(StreetInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(220, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 595, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 12, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 12, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TypeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TypeInputActionPerformed

    private void NameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameInputActionPerformed

    private void IdInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdInputActionPerformed

    private void ContactInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContactInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ContactInputActionPerformed

    private void EmailInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailInputActionPerformed

    private void CommunityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CommunityInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CommunityInputActionPerformed

    private void CityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityInputActionPerformed

    private void HouseNoInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HouseNoInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HouseNoInputActionPerformed

    private void StreetInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StreetInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StreetInputActionPerformed

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = Table.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showInputDialog(this,"Please select a row to view");
            return;
        }

        DefaultTableModel Model = (DefaultTableModel)Table.getModel();
        Person p = (Person) Model.getValueAt(selectedRowIndex,0);

        TypeInput.setSelectedItem(p.getPersonType());
        NameInput.setText(p.getPersonName());
        IdInput.setText(String.valueOf(p.getPersonID()));
        IdInput.setEnabled(false);
        GenderInput.setText(p.getPersonGender());
        AgeInput.setValue(p.getPersonAge());
        ContactInput.setText(String.valueOf(p.getPersonContact()));
        EmailInput.setText(p.getPersonEmail());
        CommunityInput.setSelectedItem(p.getCommunity());

        for(Community c:community.getCommunity()) {
            String temp = c.getCommunityName();
            if(temp.equals(p.getCommunity())) {
                CityInput.setText(c.getCommunityCity());
            }
        }
        CityInput.setEnabled(false);
        HouseNoInput.setText(String.valueOf(p.getHouseNo()));
        StreetInput.setText(p.getStreet());
    }//GEN-LAST:event_ViewButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        int i = Table.getSelectedRow();
        DefaultTableModel Model = (DefaultTableModel)Table.getModel();

        if(i >= 0) {
            Model.setValueAt(TypeInput.getSelectedItem(),i,0);
            Model.setValueAt(IdInput.getText(),i,1);
            Model.setValueAt(NameInput.getText(), i,2);
            Model.setValueAt(ContactInput.getText(), i,3);
            Model.setValueAt(EmailInput.getText(), i,4);
            Model.setValueAt(CommunityInput.getSelectedItem(), i,5);
            JOptionPane.showMessageDialog(null, "Record Updated");
        }
        else {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = Table.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showInputDialog(this,"Please select a row to delete");
            return;
        }

        DefaultTableModel Model = (DefaultTableModel)Table.getModel();
        Person selectedPerson = (Person) Model.getValueAt(selectedRowIndex,0);

        person.deleteEmployee(selectedPerson);
        JOptionPane.showMessageDialog(null, "Record Deleted");

        ArrangeTable();
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void SearchInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchInputActionPerformed

    private void SearchInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchInputKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)Table.getModel();
        TableRowSorter<DefaultTableModel> sort = new TableRowSorter<DefaultTableModel>(model);
        Table.setRowSorter(sort);
        sort.setRowFilter(RowFilter.regexFilter(SearchInput.getText().trim()));
    }//GEN-LAST:event_SearchInputKeyReleased

    private void GenderInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenderInputActionPerformed

    private void ContactErrMsgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ContactErrMsgKeyReleased
        // TODO add your handling code here:
        String validation = "^[0-9]{10}";
        Pattern test = Pattern.compile(validation);
        Matcher ontest = test.matcher(ContactInput.getText());
        if(!ontest.matches()){
            ContactErrMsg.setText("Enter 10 digits number");
        }
        else {
            ContactErrMsg.setText(null);
        }
    }//GEN-LAST:event_ContactErrMsgKeyReleased

    private void EmailErrMsgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailErrMsgKeyReleased
        // TODO add your handling code here:
        String validation="^(?=.{1,81}$)[\\w\\.-]+@koku\\.org";
        Pattern test = Pattern.compile(validation);
        Matcher ontest = test.matcher(EmailInput.getText());
        if(!ontest.matches()){
            EmailErrMsg.setText("Enter correct email");
        }
        else {
            EmailErrMsg.setText(null);
        }
    }//GEN-LAST:event_EmailErrMsgKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner AgeInput;
    private javax.swing.JLabel Agelbl;
    private javax.swing.JTextField CityInput;
    private javax.swing.JLabel CityLbl;
    private javax.swing.JComboBox<String> CommunityInput;
    private javax.swing.JLabel CommunityLbl;
    private javax.swing.JLabel ContactErrMsg;
    private javax.swing.JTextField ContactInput;
    private javax.swing.JLabel ContactLbl;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JLabel EmailErrMsg;
    private javax.swing.JTextField EmailInput;
    private javax.swing.JLabel EmailLbl;
    private javax.swing.JTextField GenderInput;
    private javax.swing.JLabel GenderLbl;
    private javax.swing.JTextField HouseNoInput;
    private javax.swing.JLabel HouseNoLbl;
    private javax.swing.JTextField IdInput;
    private javax.swing.JLabel IdLbl;
    private javax.swing.JTextField NameInput;
    private javax.swing.JLabel NameLbl;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchInput;
    private javax.swing.JTextField StreetInput;
    private javax.swing.JLabel StreetLbl;
    private javax.swing.JTable Table;
    private javax.swing.JScrollPane TableScroll;
    private javax.swing.JComboBox<String> TypeInput;
    private javax.swing.JLabel TypeLbl;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JButton ViewButton;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
private void addCommuniy() {
        String filePath = "/Users/vishwashah/Downloads/Assignment2/files/Community.csv";
       
        try (Scanner sc = new Scanner(new File(filePath))) {
            sc.useDelimiter("[,\n]");
            String[] temp = new String[3];
            while (sc.hasNext()) {
                for(int i = 0; i < temp.length; i++) {
                    temp[i] = sc.next();
                }
                CommunityInput.addItem(temp[1]);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PersonDirectory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void ArrangeTable() {
        
        DefaultTableModel Model = (DefaultTableModel)Table.getModel();
        Model.setRowCount(0);
        
        for(Person p:person.getPerson()) {
            Object[] row = new Object[6];
            String temp = p.getPersonType();
            if(temp.equals("Doctor")) {
                row[0] = p;
                row[1] = p.getPersonID();
                row[2] = p.getPersonName();
                row[3] = p.getPersonContact();
                row[4] = p.getPersonEmail();
                row[5] = p.getCommunity();
                Model.addRow(row);
            }
        }
    }}
