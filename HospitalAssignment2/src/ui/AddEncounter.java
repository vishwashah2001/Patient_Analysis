/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;
import java.time.LocalDate;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.Patient;
import model.Person;
import model.Sys;
import model.VitalSign;
import utility.UtilityFunctions;

/**
 *
 * @author vishwashah
 */
public class AddEncounter extends javax.swing.JPanel {

    /**
     * Creates new form AddEncounter
     */
     Patient selectedPatient;
    Sys sys;
    public AddEncounter(Sys sys) {
        initComponents();
        this.sys=sys;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        lblLowBP = new javax.swing.JLabel();
        lblHighBP = new javax.swing.JLabel();
        txtLowBP = new javax.swing.JTextField();
        txtHighBP = new javax.swing.JTextField();
        lblPatientID = new javax.swing.JLabel();
        txtSearchPatient = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblTodayDate = new javax.swing.JLabel();
        lblPersonSearch = new javax.swing.JLabel();
        lblTodaysDate = new javax.swing.JLabel();
        lblPersonNameSearched = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 102));

        lblHeader.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        lblHeader.setText("Add Encounter");

        lblLowBP.setText("Systolic Blood Pressure:");

        lblHighBP.setText("Diastolic Blood Pressure");

        txtLowBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLowBPActionPerformed(evt);
            }
        });

        lblPatientID.setText("Patient ID:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblTodayDate.setText("Today's Date:");

        lblPersonSearch.setText("Person Name:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLowBP)
                                .addGap(18, 18, 18)
                                .addComponent(txtLowBP))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHighBP)
                                .addGap(18, 18, 18)
                                .addComponent(txtHighBP, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave)
                        .addGap(180, 180, 180)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblTodayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPersonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTodaysDate, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPersonNameSearched, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(117, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(346, 346, 346)
                .addComponent(lblHeader)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblHeader)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPersonNameSearched, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLowBP)
                            .addComponent(txtLowBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch)
                            .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblTodayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblHighBP)
                                .addComponent(txtHighBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblTodaysDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPersonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave))
                        .addGap(353, 353, 353))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(!validations()){
            return;
        }
        //savevalues
        UtilityFunctions util = new UtilityFunctions();
        double BP_LOW= util.convertToDouble(txtLowBP.getText());
        double BP_HIGH=util.convertToDouble(txtHighBP.getText());
        selectedPatient.getEncounterHistory().addEncounter(new VitalSign(BP_LOW,BP_HIGH));
        JOptionPane.showMessageDialog(this, "Visit saved successfully!");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        selectedPatient = sys.getPatDir().getPatientById(Integer.parseInt(txtSearchPatient.getText()));              
        
        
         //Poplate Data on screen
        if(!populateDetails(selectedPatient)){
            
            return;
        }
        
        //Populate today's date for visit
        populateDate();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtLowBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLowBPActionPerformed
        // TODO add your handling code here:
       public void populateDate(){
        
        UtilityFunctions util = new UtilityFunctions();
        
        lblTodaysDate.setText(util.covertDateToString(LocalDate.now()));
        
    }
    
    public boolean populateDetails(Patient selectedPatient){
    
        //Patient section
        return populatePersonSection(selectedPatient);
        
        
        
        
        
    }
    
    public boolean populatePersonSection(Patient selectedPatient){
        
        Person person;
        try{
             person = selectedPatient.getPerson();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Patient not found!!");
            return false;
            
        }
        
        UtilityFunctions utility = new UtilityFunctions();
        
        lblPersonNameSearched.setText(person.getName());
        
        return true;
        
    }//GEN-LAST:event_txtLowBPActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblHighBP;
    private javax.swing.JLabel lblLowBP;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPersonNameSearched;
    private javax.swing.JLabel lblPersonSearch;
    private javax.swing.JLabel lblTodayDate;
    private javax.swing.JLabel lblTodaysDate;
    private javax.swing.JTextField txtHighBP;
    private javax.swing.JTextField txtLowBP;
    private javax.swing.JTextField txtSearchPatient;
    // End of variables declaration//GEN-END:variables
public boolean validations(){
        
       UtilityFunctions utility = new UtilityFunctions();
        
        //Field validations
        boolean valFlag = true;
        int misCounter = 0;
        int temp = 0;
        
        //Error Message
        String errorMessage = "";
        
        //1. BP Low Number ***************************************************************************
        
        // TC.1 - No Null value
        temp = misCounter;
        misCounter = misCounter + utility.runValidation(".+",txtLowBP.getText());
        
        //Add message
        if(temp != misCounter){
            errorMessage = errorMessage + "Missing value in BP-Low field"+"\n";
        }
        
        //TC.2 - No special characters
        temp = misCounter;
        misCounter = misCounter + utility.runValidation("^([^!@#$%^&*()]*)$",txtLowBP.getText());
        
        //Add message
        if(temp != misCounter){
            errorMessage = errorMessage + "Remove special characters in BP-Low field"+"\n";
        }
        
        //TC.3 - Only numbers
        temp = misCounter;
        misCounter = misCounter + utility.runValidation("^[0-9]+$",txtLowBP.getText());
        
        //Add message
        if(temp != misCounter){
            errorMessage = errorMessage + "Please enter numbers in BP-Low field"+"\n";
        }
        
        //2. BP High Number ***************************************************************************
        
        // TC.1 - No Null value
        temp = misCounter;
        misCounter = misCounter + utility.runValidation(".+",txtHighBP.getText());
        
        //Add message
        if(temp != misCounter){
            errorMessage = errorMessage + "Missing value in BP-High field"+"\n";
        }
        
        //TC.2 - No special characters
        temp = misCounter;
        misCounter = misCounter + utility.runValidation("^([^!@#$%^&*()]*)$",txtHighBP.getText());
        
        //Add message
        if(temp != misCounter){
            errorMessage = errorMessage + "Remove special characters in BP-High field"+"\n";
        }
        
        //TC.3 - Only numbers
        temp = misCounter;
        misCounter = misCounter + utility.runValidation("^[0-9]+$",txtHighBP.getText());
        
        //Add message
        if(temp != misCounter){
            errorMessage = errorMessage + "Please enter numbers in BP-High field"+"\n";
        }
        
       // ********************************************************************************************
        // Check validations
        if(misCounter > 0){
           JOptionPane.showMessageDialog(this, errorMessage);
           valFlag = false;
        }
        // ********************************************************************************************
        
        
        return valFlag;
        
    }
}
